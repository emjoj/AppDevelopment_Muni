// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"

url = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int                @id @default(autoincrement())
  firstName     String
  lastName      String
  messages      Message[]
  rightUser     Contact[]          @relation("rightUser")
  leftUser      Contact[]          @relation("leftUser")
  conversations ConversationUser[]
}

model Contact {
  id          Int   @id @default(autoincrement())
  rightUser   User  @relation("rightUser", fields: [rightUserId], references: [id])
  rightUserId Int
  leftUser    User  @relation("leftUser", fields: [leftUserId], references: [id])
  leftUserId  Int
  state       State @default(UNAPPROVED)
}

model Conversation {
  id       Int                @id @default(autoincrement())
  isActive Boolean            @default(false)
  isPinned Boolean            @default(false)
  users    ConversationUser[]
  messages Message[]

}

model ConversationUser {
  id             Int          @id @default(autoincrement())
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  user           User         @relation(fields: [userId], references: [id])
  userId         Int

}

model Message {
  id             Int           @id @default(autoincrement())
  senderId       Int
  sender         User          @relation(fields: [senderId], references: [id])
  content        String?
  createdAt      DateTime      @default(now())
  conversationId Int?
  conversation   Conversation? @relation(fields: [conversationId], references: [id])

}

enum State {
  APPROVED
  UNAPPROVED
  BLOCKED
  PENDING
}
